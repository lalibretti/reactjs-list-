[{"/Users/laurenlibretti/Repos/list2/list2/src/index.js":"1","/Users/laurenlibretti/Repos/list2/list2/src/App.js":"2","/Users/laurenlibretti/Repos/list2/list2/src/reportWebVitals.js":"3","/Users/laurenlibretti/Repos/list2/list2/src/components/Todo.js":"4","/Users/laurenlibretti/Repos/list2/list2/src/components/Form.js":"5","/Users/laurenlibretti/Repos/list2/list2/src/components/FilterButton.js":"6"},{"size":688,"mtime":1607551668142,"results":"7","hashOfConfig":"8"},{"size":2288,"mtime":1607622503207,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1607455653693,"results":"10","hashOfConfig":"8"},{"size":2187,"mtime":1607618091825,"results":"11","hashOfConfig":"8"},{"size":783,"mtime":1607622344794,"results":"12","hashOfConfig":"8"},{"size":397,"mtime":1607551676648,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"og5m84",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/laurenlibretti/Repos/list2/list2/src/index.js",[],["28","29"],"/Users/laurenlibretti/Repos/list2/list2/src/App.js",["30"],"import React, { useState } from \"react\";\nimport './App.css';\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const taskList = tasks \n    .filter(FILTER_MAP[filter])\n    .map(task => (\n    <Todo\n     id={task.id} \n    name={task.name} \n    completed={task.completed}\n    key={task.id} \n    toggleTaskCompleted={toggleTaskCompleted}\n    deleteTask={deleteTask}\n    editTask={editTask}\n    />\n  ));\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton key={name} name={name}\n    isPressed={name === filter}\n    setFilter={setFilter}\n    />\n  ));\n\n  function addTask(name) {\n    const newTask = { id: \"id\", name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  return (\n    <div className=\"todoapp stack-large\">\n    <Form addTask={addTask} />\n    <div className=\"filters btn-group stack-exception\">\n      {filterList}\n    </div>\n  <h2 id=\"list-heading\">{headingText}</h2>\n    <ul\n      role=\"list\"\n      className=\"todo-list stack-large stack-exception\"\n      aria-labelledby=\"list-heading\"\n    >\n      {taskList}\n    </ul>\n  </div>\n);\n}\n\nexport default App;\n","/Users/laurenlibretti/Repos/list2/list2/src/reportWebVitals.js",[],"/Users/laurenlibretti/Repos/list2/list2/src/components/Todo.js",[],"/Users/laurenlibretti/Repos/list2/list2/src/components/Form.js",[],"/Users/laurenlibretti/Repos/list2/list2/src/components/FilterButton.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":82,"column":5,"nodeType":"37","endLine":86,"endColumn":6},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]
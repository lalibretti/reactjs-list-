{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","addTask","className","htmlFor","type","id","autoComplete","value","onChange","target","FilterButton","aria-pressed","isPressed","onClick","setFilter","Todo","isEditing","setEditing","newName","setNewName","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","updatedTasks","map","remainingTasks","editedTaskList","taskList","filterList","tasksNoun","length","headingText","newTask","role","aria-labelledby","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7a79d19.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Form(props) {\n  const [name, setName] = useState(\"\");\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.addTask(name);\n    setName(\"\");\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2 className=\"label-wrapper\">\n        <label htmlFor=\"new-todo-input\">\n          To Do List\n        </label>\n      </h2>\n      <input\n        type=\"text\"\n        id=\"new-todo-input\"\n        className=\"input input__lg\"\n        name=\"text\"\n        autoComplete=\"off\"\n        value={name}\n        onChange={handleChange}\n      />\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n        Add\n      </button>\n    </form>\n  );\n}\n\nexport default Form;","import React from \"react\";\n\nfunction FilterButton(props) {\n  return (\n    <button type=\"button\" className=\"btn toggle-btn\" aria-pressed={props.isPressed}\n    onClick={() => props.setFilter(props.name)}\n    >\n      <span className=\"visually-hidden\">Show </span>\n      <span>{props.name}</span>\n      <span className=\"visually-hidden\"> tasks</span>\n    </button>\n  );\n}\n\nexport default FilterButton;","import React, {useState} from \"react\";\n\nexport default function Todo(props) {\n\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n  \n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input id={props.id} className=\"todo-text\" type=\"text\" value={newName} onChange={handleChange}/>\n      </div>\n      <div className=\"btn-group\">\n        <button type=\"button\" className=\"btn todo-cancel\"onClick={() => setEditing(false)}>\n          Cancel\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n        </button>\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n          <input\n            id={props.id}\n            type=\"checkbox\"\n            defaultChecked={props.completed}\n            onChange={() => props.toggleTaskCompleted(props.id)}\n          />\n          <label className=\"todo-label\" htmlFor={props.id}>\n            {props.name}\n          </label>\n        </div>\n        <div className=\"btn-group\">\n          <button type=\"button\" className=\"btn\" onClick={() => setEditing(true)}>\n            Edit <span className=\"visually-hidden\">{props.name}</span>\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn__danger\"\n            onClick={() => props.deleteTask(props.id)}\n          >\n            Delete <span className=\"visually-hidden\">{props.name}</span>\n          </button>\n        </div>\n    </div>\n  );\n  \n    return (\n      <li className=\"todo\">\n        {isEditing ? editingTemplate : viewTemplate} \n      </li>\n    );\n  }\n\n","import React, { useState } from \"react\";\nimport './App.css';\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const taskList = tasks \n    .filter(FILTER_MAP[filter])\n    .map(task => (\n    <Todo\n     id={task.id} \n    name={task.name} \n    completed={task.completed}\n    key={task.id} \n    toggleTaskCompleted={toggleTaskCompleted}\n    deleteTask={deleteTask}\n    editTask={editTask}\n    />\n  ));\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton key={name} name={name}\n    isPressed={name === filter}\n    setFilter={setFilter}\n    />\n  ));\n\n  function addTask(name) {\n    const newTask = { id: \"id\", name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  return (\n    <div className=\"todoapp stack-large\">\n    <Form addTask={addTask} />\n    <div className=\"filters btn-group stack-exception\">\n      {filterList}\n    </div>\n  <h2 id=\"list-heading\">{headingText}</h2>\n    <ul\n      role=\"list\"\n      className=\"todo-list stack-large stack-exception\"\n      aria-labelledby=\"list-heading\"\n    >\n      {taskList}\n    </ul>\n  </div>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst DATA = [\n  { id: \"todo-0\", name: \"Eat\", completed: true },\n  { id: \"todo-1\", name: \"Sleep\", completed: false },\n  { id: \"todo-2\", name: \"Repeat\", completed: false }\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}